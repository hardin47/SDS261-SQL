---
title: "Lab 2 - SQL clauses"
author: "your name goes here"
date: "due 10am Wednesday, January 10, 2024"
format: 
  unilur-html: default
  unilur-html+solution:
    output-file: lab2_clauses_sds261_j24_sol.html
execute:
  echo: true
  warning: false
  message: false
---

do something with NA / NULL. see hadley's comments in the where section. https://r4ds.hadley.nz/databases#where

do something with distinct()

```{r}
#| unilur-solution: true

library(tidyverse)
library(DBI)
library(RMariaDB)
library(dbplyr)
library(mdsr)
```

Today's lab will provide practice working with **SQL** clauses in **DBeaver**.

The goals for lab 2 include:

* Working with clauses in SQL
* In particular, understanding each of SELECT, FROM, WHERE, GROUP BY, HAVING, ORDER BY, and LIMIT



## Advice for turning in the assignment

* render early and often.  In fact, go ahead and render your .qmd file right now.  Maybe set a timer so that you render every 5 minutes.  Do **not** wait until you are done with the assignment to render

* save the .Rproj file somewhere you can find it.  Don't keep everything in your downloads folder.  Maybe make a folder called `SDS261` or something.  That folder could live on your Desktop.  Or maybe in your Dropbox.  

* The **SQL** document should be saved in the **R** Project as `lab2-sds261-yourlastname-yourfirstname.sql`.  You will have to navigate to the **R** Project to save the **DBeaver** file in the correct place.

* Connect to the `nyctaxi` database, which contains the `yellow_old` table.

```{r}
#| echo: false

con_taxi <- DBI::dbConnect(
  RMariaDB::MariaDB(),
  dbname = "nyctaxi",
  host = "mdsr.cdc7tgkkqd0n.us-east-1.rds.amazonaws.com",
  user = "mdsr_public",
  password = "ImhsmflMDSwR"
)
```


##  Assignment

Fill in the query below to select the tailnum and year columns from the planes table. For safety, we are only going to return the first 5 rows.

Using the MIN() function, find the oldest date of manufacture (year) in the planes table.

Using WHERE, find the tailnum of the oldest plane in the planes table.

Modify the above code to find the newest manufacturing date, and calculate the number of planes which share the newest manufacturing date. You can use SUM(1) or COUNT(...) to count rows.

Which airport had the highest average arrival delay time in 2010? 

How many domestic flights came into or flew out of Bradley Airport (BDL) in 2012?



```{r}
dbDisconnect(con_taxi)
```